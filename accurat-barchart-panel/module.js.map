{"version":3,"file":"module.js","mappings":"gIAAAA,EAAOC,QAAUC,C,UCAjBF,EAAOC,QAAUE,C,UCAjBH,EAAOC,QAAUG,C,QCAjBJ,EAAOC,QAAUI,C,UCAjBL,EAAOC,QAAUK,C,GCCbC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaT,QAGrB,IAAID,EAASO,EAAyBE,GAAY,CAGjDR,QAAS,CAAC,GAOX,OAHAW,EAAoBH,GAAUT,EAAQA,EAAOC,QAASO,GAG/CR,EAAOC,OACf,CCrBAO,EAAoBK,EAAKb,IACxB,IAAIc,EAASd,GAAUA,EAAOe,WAC7B,IAAOf,EAAiB,QACxB,IAAM,EAEP,OADAQ,EAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdN,EAAoBQ,EAAI,CAACf,EAASiB,KACjC,IAAI,IAAIC,KAAOD,EACXV,EAAoBY,EAAEF,EAAYC,KAASX,EAAoBY,EAAEnB,EAASkB,IAC5EE,OAAOC,eAAerB,EAASkB,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDX,EAAoBY,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFlB,EAAoBsB,EAAK7B,IACH,oBAAX8B,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAerB,EAAS8B,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAerB,EAAS,aAAc,CAAEgC,OAAO,GAAO,E,yGCI9D,MAAMC,EAAY,KACT,CACLC,QAASC,EAAAA,GAAG;;;MAIZC,IAAKD,EAAAA,GAAG;;;;MAKRE,QAASF,EAAAA,GAAG;;;;;QChBHG,EAAS,IAAIC,EAAAA,aDyBkB,EAAGC,UAASC,OAAMC,QAAOC,SAAQC,cAAaC,SACxF,MAAMC,GAAQC,EAAAA,EAAAA,aACRC,GAASC,EAAAA,EAAAA,YAAWhB,GAE1B,OAA2B,IAAvBQ,EAAKS,OAAOC,OACP,kBAACC,EAAAA,mBAAkBA,CAACR,YAAaA,EAAaS,QAASR,EAAIJ,KAAMA,EAAMa,kBAAAA,IAI9E,kBAACC,MAAAA,CACCC,WAAWC,EAAAA,EAAAA,IACTT,EAAOd,QACPC,EAAAA,GAAG;mBACQO;oBACCC;YAId,kBAACP,MAAAA,CACCoB,UAAWR,EAAOZ,IAClBM,MAAOA,EACPC,OAAQA,EACRe,MAAM,6BACNC,WAAW,+BACXC,QAAS,IAAIlB,EAAQ,MAAMC,EAAS,KAAKD,KAASC,KAElD,kBAACkB,IAAAA,KACC,kBAACC,SAAAA,CAAOC,cAAY,sBAAsBC,MAAO,CAAEC,KAAMnB,EAAMoB,OAAOC,QAAQC,MAAQvC,EAAG,QAI7F,kBAAC0B,MAAAA,CAAIC,UAAWR,EAAOX,SACpBG,EAAQ6B,iBACP,kBAACd,MAAAA,CAAIQ,cAAY,+BAA8B,qBAAmBtB,EAAKS,OAAOC,QAEhF,kBAACI,MAAAA,KAAI,sBAAoBf,EAAQ8B,OAAI,IC5DqBC,iBAAiBC,GAC1EA,EACJC,aAAa,CACZC,KAAM,OACNC,KAAM,qBACNC,YAAa,8BACbC,aAAc,uCAEfC,iBAAiB,CAChBJ,KAAM,kBACNC,KAAM,sBACNE,cAAc,IAEfE,SAAS,CACRL,KAAM,kBACNG,aAAc,KACdF,KAAM,sBACNK,SAAU,CACRxC,QAAS,CACP,CACER,MAAO,KACPiD,MAAO,SAET,CACEjD,MAAO,KACPiD,MAAO,UAET,CACEjD,MAAO,KACPiD,MAAO,WAIbC,OAASC,GAAWA,EAAOd,mB","sources":["webpack://accurat-barchart-panel/external amd \"@emotion/css\"","webpack://accurat-barchart-panel/external amd \"@grafana/data\"","webpack://accurat-barchart-panel/external amd \"@grafana/runtime\"","webpack://accurat-barchart-panel/external amd \"@grafana/ui\"","webpack://accurat-barchart-panel/external amd \"react\"","webpack://accurat-barchart-panel/webpack/bootstrap","webpack://accurat-barchart-panel/webpack/runtime/compat get default export","webpack://accurat-barchart-panel/webpack/runtime/define property getters","webpack://accurat-barchart-panel/webpack/runtime/hasOwnProperty shorthand","webpack://accurat-barchart-panel/webpack/runtime/make namespace object","webpack://accurat-barchart-panel/./components/SimplePanel.tsx","webpack://accurat-barchart-panel/./module.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__89__;","module.exports = __WEBPACK_EXTERNAL_MODULE__781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__531__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__959__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React from 'react';\nimport { PanelProps } from '@grafana/data';\nimport { SimpleOptions } from 'types';\nimport { css, cx } from '@emotion/css';\nimport { useStyles2, useTheme2 } from '@grafana/ui';\nimport { PanelDataErrorView } from '@grafana/runtime';\n\ninterface Props extends PanelProps<SimpleOptions> {}\n\nconst getStyles = () => {\n  return {\n    wrapper: css`\n      font-family: Open Sans;\n      position: relative;\n    `,\n    svg: css`\n      position: absolute;\n      top: 0;\n      left: 0;\n    `,\n    textBox: css`\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      padding: 10px;\n    `,\n  };\n};\n\nexport const SimplePanel: React.FC<Props> = ({ options, data, width, height, fieldConfig, id }) => {\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  if (data.series.length === 0) {\n    return <PanelDataErrorView fieldConfig={fieldConfig} panelId={id} data={data} needsStringField />;\n  }\n\n  return (\n    <div\n      className={cx(\n        styles.wrapper,\n        css`\n          width: ${width}px;\n          height: ${height}px;\n        `\n      )}\n    >\n      <svg\n        className={styles.svg}\n        width={width}\n        height={height}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        viewBox={`-${width / 2} -${height / 2} ${width} ${height}`}\n      >\n        <g>\n          <circle data-testid=\"simple-panel-circle\" style={{ fill: theme.colors.primary.main }} r={100} />\n        </g>\n      </svg>\n\n      <div className={styles.textBox}>\n        {options.showSeriesCount && (\n          <div data-testid=\"simple-panel-series-counter\">Number of series: {data.series.length}</div>\n        )}\n        <div>Text option value: {options.text}</div>\n      </div>\n    </div>\n  );\n};\n","import { PanelPlugin } from '@grafana/data';\nimport { SimpleOptions } from './types';\nimport { SimplePanel } from './components/SimplePanel';\n\nexport const plugin = new PanelPlugin<SimpleOptions>(SimplePanel).setPanelOptions((builder) => {\n  return builder\n    .addTextInput({\n      path: 'text',\n      name: 'Simple text option',\n      description: 'Description of panel option',\n      defaultValue: 'Default value of text input option',\n    })\n    .addBooleanSwitch({\n      path: 'showSeriesCount',\n      name: 'Show series counter',\n      defaultValue: false,\n    })\n    .addRadio({\n      path: 'seriesCountSize',\n      defaultValue: 'sm',\n      name: 'Series counter size',\n      settings: {\n        options: [\n          {\n            value: 'sm',\n            label: 'Small',\n          },\n          {\n            value: 'md',\n            label: 'Medium',\n          },\n          {\n            value: 'lg',\n            label: 'Large',\n          },\n        ],\n      },\n      showIf: (config) => config.showSeriesCount,\n    });\n});\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__89__","__WEBPACK_EXTERNAL_MODULE__781__","__WEBPACK_EXTERNAL_MODULE__531__","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__959__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","getStyles","wrapper","css","svg","textBox","plugin","PanelPlugin","options","data","width","height","fieldConfig","id","theme","useTheme2","styles","useStyles2","series","length","PanelDataErrorView","panelId","needsStringField","div","className","cx","xmlns","xmlnsXlink","viewBox","g","circle","data-testid","style","fill","colors","primary","main","showSeriesCount","text","setPanelOptions","builder","addTextInput","path","name","description","defaultValue","addBooleanSwitch","addRadio","settings","label","showIf","config"],"sourceRoot":""}